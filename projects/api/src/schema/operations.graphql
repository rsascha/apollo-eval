type Query {
  teachers: [Teacher!]!
  teacher(id: Int!): Teacher
  courses: [Course!]!
  course(id: Int!): Course
  students: [Student!]!
  student(id: Int!): Student
  lessons: [Lesson!]!
  lessonsByCourse(courseId: Int!): [Lesson!]!
  enrollments: [CourseEnrollment!]!
  completions: [LessonCompletion!]!
  studentProgress(courseId: Int!, studentId: Int!): [Lesson!]!
}

type Mutation {
  createTeacher(input: CreateTeacherInput!): Teacher!
  updateTeacher(id: Int!, input: CreateTeacherInput!): Teacher
  deleteTeacher(id: Int!): Boolean!

  createCourse(input: CreateCourseInput!): Course!
  updateCourse(id: Int!, input: CreateCourseInput!): Course
  deleteCourse(id: Int!): Boolean!

  createStudent(input: CreateStudentInput!): Student!
  updateStudent(id: Int!, input: CreateStudentInput!): Student
  deleteStudent(id: Int!): Boolean!

  createLesson(input: CreateLessonInput!): Lesson!
  updateLesson(
    courseId: Int!
    sequenceNumber: Int!
    title: String
    content: String
  ): Lesson
  deleteLesson(courseId: Int!, sequenceNumber: Int!): Boolean!

  enrollStudent(input: EnrollStudentInput!): CourseEnrollment!
  unenrollStudent(courseId: Int!, studentId: Int!): Boolean!

  completeLesson(input: CompleteLessonInput!): LessonCompletion!
  uncompleteLesson(
    courseId: Int!
    sequenceNumber: Int!
    studentId: Int!
  ): Boolean!
}
